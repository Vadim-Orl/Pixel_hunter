{"version":3,"names":[],"mappings":"","sources":["utils/bisnesFunction.js"],"sourcesContent":["import { CONSTANTS } from \"./constants.js\";\n\nconst INITIAL_GAME = Object.freeze({\n  results: Object.freeze(new Array(CONSTANTS.OPTION_GAME.MAX_QUESTIONS).fill(CONSTANTS.LIBRARY_TYPE_ANSWERS.unknown)),\n  level: CONSTANTS.OPTION_GAME.START_LEVEL,\n  lives: CONSTANTS.OPTION_GAME.MAX_LIVES,\n  time: CONSTANTS.OPTION_GAME.TIME_FOR_QUESTION,\n  questions: CONSTANTS.OPTION_GAME.MAX_QUESTIONS\n});\n\nconst resultGame = (game) => {\n  if (game.results.length < CONSTANTS.OPTION_GAME.MAX_QUESTIONS) {\n    return -1\n  }\n  \n  let summ = 0;\n  game.results.forEach(element => {\n    summ += CONSTANTS.LIBRARY_ANSWER_POINT[element];\n    element === CONSTANTS.LIBRARY_TYPE_ANSWERS.fast|| element === CONSTANTS.LIBRARY_TYPE_ANSWERS.slow ? summ += 100 : summ;\n  });\n\n  summ += game.lives * CONSTANTS.LIBRARY_ANSWER_POINT.balanceLivePoint;\n\n  return summ;\n}\n\n\nconst changeLevel = (game, level) => {\n  if (level < 0) {\n    return game.level;\n  }\n\n  if (level >= game.questions) {\n    return 0;\n  }\n\n  const newLevel = level;\n\n  const newGame = { ...game, level: newLevel };\n  return newGame;\n}\n\nconst decLives = (game) => {\n  if (game.lives < 1) {\n    return 0;\n  }\n  console.log(game)\n  const newLives = game.lives - 1;\n  console.log('hello ' + newLives)\n\n  const newGame = { ...game, lives: newLives };\n  return newGame;\n}\n\nconst tick = (game) => {\n  const newGame = { ...game };\n  newGame.time -= 1;\n  return newGame;\n}\n\nconst answer = (game, isCorrectAnsw, timeAnswer) => {\n  let newGame = JSON.parse(JSON.stringify(game))\n\n  if (!isCorrectAnsw) {\n    newGame.results[newGame.level] = CONSTANTS.LIBRARY_TYPE_ANSWERS.wrong;\n    newGame = decLives(newGame)\n  } else {\n    switch (true) {\n      case (timeAnswer <= 3): {\n        newGame.results[newGame.level] = CONSTANTS.LIBRARY_TYPE_ANSWERS.fast;\n        break;\n      }\n      case (timeAnswer > 5): {\n        newGame.results[newGame.level] = CONSTANTS.LIBRARY_TYPE_ANSWERS.slow;\n        break;\n      }\n      default: {\n        newGame.results[newGame.level] = CONSTANTS.LIBRARY_TYPE_ANSWERS.correct;\n      }\n    }\n  }\n\n  return newGame;\n}\n\nexport  {INITIAL_GAME, changeLevel, decLives, tick, resultGame, answer}\n\n"],"file":"bisnesFunction.js"}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlcyI6WyJ1dGlscy9iaXNuZXNGdW5jdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT05TVEFOVFMgfSBmcm9tIFwiLi9jb25zdGFudHMuanNcIjtcblxuY29uc3QgSU5JVElBTF9HQU1FID0gT2JqZWN0LmZyZWV6ZSh7XG4gIHJlc3VsdHM6IE9iamVjdC5mcmVlemUobmV3IEFycmF5KENPTlNUQU5UUy5PUFRJT05fR0FNRS5NQVhfUVVFU1RJT05TKS5maWxsKENPTlNUQU5UUy5MSUJSQVJZX1RZUEVfQU5TV0VSUy51bmtub3duKSksXG4gIGxldmVsOiBDT05TVEFOVFMuT1BUSU9OX0dBTUUuU1RBUlRfTEVWRUwsXG4gIGxpdmVzOiBDT05TVEFOVFMuT1BUSU9OX0dBTUUuTUFYX0xJVkVTLFxuICB0aW1lOiBDT05TVEFOVFMuT1BUSU9OX0dBTUUuVElNRV9GT1JfUVVFU1RJT04sXG4gIHF1ZXN0aW9uczogQ09OU1RBTlRTLk9QVElPTl9HQU1FLk1BWF9RVUVTVElPTlNcbn0pO1xuXG5jb25zdCByZXN1bHRHYW1lID0gKGdhbWUpID0+IHtcbiAgaWYgKGdhbWUucmVzdWx0cy5sZW5ndGggPCBDT05TVEFOVFMuT1BUSU9OX0dBTUUuTUFYX1FVRVNUSU9OUykge1xuICAgIHJldHVybiAtMVxuICB9XG4gIFxuICBsZXQgc3VtbSA9IDA7XG4gIGdhbWUucmVzdWx0cy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgIHN1bW0gKz0gQ09OU1RBTlRTLkxJQlJBUllfQU5TV0VSX1BPSU5UW2VsZW1lbnRdO1xuICAgIGVsZW1lbnQgPT09IENPTlNUQU5UUy5MSUJSQVJZX1RZUEVfQU5TV0VSUy5mYXN0fHwgZWxlbWVudCA9PT0gQ09OU1RBTlRTLkxJQlJBUllfVFlQRV9BTlNXRVJTLnNsb3cgPyBzdW1tICs9IDEwMCA6IHN1bW07XG4gIH0pO1xuXG4gIHN1bW0gKz0gZ2FtZS5saXZlcyAqIENPTlNUQU5UUy5MSUJSQVJZX0FOU1dFUl9QT0lOVC5iYWxhbmNlTGl2ZVBvaW50O1xuXG4gIHJldHVybiBzdW1tO1xufVxuXG5cbmNvbnN0IGNoYW5nZUxldmVsID0gKGdhbWUsIGxldmVsKSA9PiB7XG4gIGlmIChsZXZlbCA8IDApIHtcbiAgICByZXR1cm4gZ2FtZS5sZXZlbDtcbiAgfVxuXG4gIGlmIChsZXZlbCA+PSBnYW1lLnF1ZXN0aW9ucykge1xuICAgIHJldHVybiAwO1xuICB9XG5cbiAgY29uc3QgbmV3TGV2ZWwgPSBsZXZlbDtcblxuICBjb25zdCBuZXdHYW1lID0geyAuLi5nYW1lLCBsZXZlbDogbmV3TGV2ZWwgfTtcbiAgcmV0dXJuIG5ld0dhbWU7XG59XG5cbmNvbnN0IGRlY0xpdmVzID0gKGdhbWUpID0+IHtcbiAgaWYgKGdhbWUubGl2ZXMgPCAxKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgY29uc29sZS5sb2coZ2FtZSlcbiAgY29uc3QgbmV3TGl2ZXMgPSBnYW1lLmxpdmVzIC0gMTtcbiAgY29uc29sZS5sb2coJ2hlbGxvICcgKyBuZXdMaXZlcylcblxuICBjb25zdCBuZXdHYW1lID0geyAuLi5nYW1lLCBsaXZlczogbmV3TGl2ZXMgfTtcbiAgcmV0dXJuIG5ld0dhbWU7XG59XG5cbmNvbnN0IHRpY2sgPSAoZ2FtZSkgPT4ge1xuICBjb25zdCBuZXdHYW1lID0geyAuLi5nYW1lIH07XG4gIG5ld0dhbWUudGltZSAtPSAxO1xuICByZXR1cm4gbmV3R2FtZTtcbn1cblxuY29uc3QgYW5zd2VyID0gKGdhbWUsIGlzQ29ycmVjdEFuc3csIHRpbWVBbnN3ZXIpID0+IHtcbiAgbGV0IG5ld0dhbWUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGdhbWUpKVxuXG4gIGlmICghaXNDb3JyZWN0QW5zdykge1xuICAgIG5ld0dhbWUucmVzdWx0c1tuZXdHYW1lLmxldmVsXSA9IENPTlNUQU5UUy5MSUJSQVJZX1RZUEVfQU5TV0VSUy53cm9uZztcbiAgICBuZXdHYW1lID0gZGVjTGl2ZXMobmV3R2FtZSlcbiAgfSBlbHNlIHtcbiAgICBzd2l0Y2ggKHRydWUpIHtcbiAgICAgIGNhc2UgKHRpbWVBbnN3ZXIgPD0gMyk6IHtcbiAgICAgICAgbmV3R2FtZS5yZXN1bHRzW25ld0dhbWUubGV2ZWxdID0gQ09OU1RBTlRTLkxJQlJBUllfVFlQRV9BTlNXRVJTLmZhc3Q7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAodGltZUFuc3dlciA+IDUpOiB7XG4gICAgICAgIG5ld0dhbWUucmVzdWx0c1tuZXdHYW1lLmxldmVsXSA9IENPTlNUQU5UUy5MSUJSQVJZX1RZUEVfQU5TV0VSUy5zbG93O1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgbmV3R2FtZS5yZXN1bHRzW25ld0dhbWUubGV2ZWxdID0gQ09OU1RBTlRTLkxJQlJBUllfVFlQRV9BTlNXRVJTLmNvcnJlY3Q7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ld0dhbWU7XG59XG5cbmV4cG9ydCAge0lOSVRJQUxfR0FNRSwgY2hhbmdlTGV2ZWwsIGRlY0xpdmVzLCB0aWNrLCByZXN1bHRHYW1lLCBhbnN3ZXJ9XG5cbiJdLCJmaWxlIjoiYmlzbmVzRnVuY3Rpb24uanMifQ==